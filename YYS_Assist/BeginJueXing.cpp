#include "pch.h"
#include "BeginJueXing.h"

#define EXIT_THREAD -10

extern bool readyFlag;
//Ñ¡²ã
int BeginJueXing::ChooseLayer(long hd, int layer, CPoint startXY, CPoint endXY, dmsoft *dm, int gameclass, int index) {
	if (dm == NULL)
	{
		return 0;
	}
	//×Ô¶¯¾Ü¾øÐüÉÍ
	if (AutoRejectXS(hd, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
	//»ñÈ¡Ä¿±êÎ»ÖÃ
	CString bmp_pic = _T("Ò¼²ã.bmp|·¡²ã.bmp|Èþ²ã.bmp|ËÁ²ã.bmp|Îé²ã.bmp|Â½²ã.bmp|Æâ²ã.bmp|°Æ²ã.bmp|¾Á²ã.bmp|Ê°²ã.bmp");

	//»ñÈ¡¸¸´°¿Ú±êÌâ
	long parentHandle = dm->GetWindow(hd, 0);
	CString title = dm->GetWindowTitle(parentHandle);
	//start Ñ¡Ôñ²ã
	print_log(_T("Ñ¡Ôñ¾õÐÑ²ãÊý...\r\n"), gameclass);
	switch (layer)
	{
	case 0: {
		if (findDestination(hd, bmp_pic, layer, _T("Ò¼²ã.bmp|Ò¼²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else {
			return 0;
		}
	}
	case 1: {
		if (findDestination(hd, bmp_pic, layer, _T("·¡²ã.bmp|·¡²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 2: {
		if (findDestination(hd, bmp_pic, layer, _T("Èþ²ã.bmp|Èþ²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 3: {
		if (findDestination(hd, bmp_pic, layer, _T("ËÁ²ã.bmp|ËÁ²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 4: {
		if (findDestination(hd, bmp_pic, layer, _T("Îé²ã.bmp|Îé²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 5: {
		if (findDestination(hd, bmp_pic, layer, _T("Â½²ã.bmp|Â½²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 6: {
		if (findDestination(hd, bmp_pic, layer, _T("Æâ²ã.bmp|Æâ²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 7: {
		if (findDestination(hd, bmp_pic, layer, _T("°Æ²ã.bmp|°Æ²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 8: {
		if (findDestination(hd, bmp_pic, layer, _T("¾Á²ã.bmp|¾Á²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 9: {
		if (findDestination(hd, bmp_pic, layer, _T("Ê°²ã.bmp|Ê°²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	default:
		return 0;
	}
	return 1;
}

//µ¥Ë¢Ñ¡Ôñ²ãÊý
int BeginJueXing::SingleChooseLayer(long hd, int layer, CPoint startXY, CPoint endXY, dmsoft *dm, int gameclass, int index) {
	if (dm == NULL)
	{
		return 0;
	}
	//×Ô¶¯¾Ü¾øÐüÉÍ
	if (AutoRejectXS(hd, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
	//»ñÈ¡Ä¿±êÎ»ÖÃ
	CString bmp_pic = _T("µ¥Ë¢¾õÐÑÒ¼²ã.bmp|µ¥Ë¢¾õÐÑ·¡²ã.bmp|µ¥Ë¢¾õÐÑÈþ²ã.bmp|µ¥Ë¢¾õÐÑËÁ²ã.bmp|µ¥Ë¢¾õÐÑÎé²ã.bmp|µ¥Ë¢¾õÐÑÂ½²ã.bmp|µ¥Ë¢¾õÐÑÆâ²ã.bmp|µ¥Ë¢¾õÐÑ°Æ²ã.bmp|µ¥Ë¢¾õÐÑ¾Á²ã.bmp|µ¥Ë¢¾õÐÑÊ°²ã.bmp");

	//»ñÈ¡¸¸´°¿Ú±êÌâ
	long parentHandle = dm->GetWindow(hd, 0);
	CString title = dm->GetWindowTitle(parentHandle);
	//start Ñ¡Ôñ²ã
	print_log(_T("Ñ¡Ôñ¾õÐÑ²ãÊý...\r\n"), gameclass);
	switch (layer)
	{
	case 0: {
		if (findDestination(hd, bmp_pic, layer, _T("µ¥Ë¢¾õÐÑÒ¼²ã.bmp|µ¥Ë¢¾õÐÑÒ¼²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else {
			return 0;
		}
	}
	case 1: {
		if (findDestination(hd, bmp_pic, layer, _T("µ¥Ë¢¾õÐÑ·¡²ã.bmp|µ¥Ë¢¾õÐÑ·¡²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 2: {
		if (findDestination(hd, bmp_pic, layer, _T("µ¥Ë¢¾õÐÑÈþ²ã.bmp|µ¥Ë¢¾õÐÑÈþ²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 3: {
		if (findDestination(hd, bmp_pic, layer, _T("µ¥Ë¢¾õÐÑËÁ²ã.bmp|µ¥Ë¢¾õÐÑËÁ²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 4: {
		if (findDestination(hd, bmp_pic, layer, _T("µ¥Ë¢¾õÐÑÎé²ã.bmp|µ¥Ë¢¾õÐÑÎé²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 5: {
		if (findDestination(hd, bmp_pic, layer, _T("µ¥Ë¢¾õÐÑÂ½²ã.bmp|µ¥Ë¢¾õÐÑÂ½²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 6: {
		if (findDestination(hd, bmp_pic, layer, _T("µ¥Ë¢¾õÐÑÆâ²ã.bmp|µ¥Ë¢¾õÐÑÆâ²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 7: {
		if (findDestination(hd, bmp_pic, layer, _T("µ¥Ë¢¾õÐÑ°Æ²ã.bmp|µ¥Ë¢¾õÐÑ°Æ²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 8: {
		if (findDestination(hd, bmp_pic, layer, _T("µ¥Ë¢¾õÐÑ¾Á²ã.bmp|µ¥Ë¢¾õÐÑ¾Á²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	case 9: {
		if (findDestination(hd, bmp_pic, layer, _T("µ¥Ë¢¾õÐÑÊ°²ã.bmp|µ¥Ë¢¾õÐÑÊ°²ã(Ñ¡ÖÐ).bmp"), startXY, endXY, dm, gameclass, index))
			break;
		else
			return 0;
	}
	default:
		return 0;
	}
	return 1;
}

//³éÏó³öÑ¡ÔñÄÄÖ»÷è÷ë·½·¨£¬·½±ãµ÷ÓÃ
int BeginJueXing::WhichToSelect(long hd, dmsoft *dm, CPoint startXY, CPoint endXY, CString source_pic, int gameclass, int index) {
	if (dm == NULL)
	{
		return 0;
	}
	int i = 15;
	//»ñÈ¡¸¸´°¿Ú±êÌâ
	long parentHandle = dm->GetWindow(hd, 0);
	CString title = dm->GetWindowTitle(parentHandle);
	long intX, intY;
	while (i > 0)
	{
		//×Ô¶¯¾Ü¾øÐüÉÍ
		if (AutoRejectXS(hd, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		//¿ªÆôÁË
		if (dm->FindPic(startXY.x, startXY.y, endXY.x, endXY.y, source_pic, _T("202020"), 0.85, 0, &intX, &intY) != -1)
		{
			if (random_delay(index, gameclass, dm, 1000, 1500) == EXIT_THREAD) { return EXIT_THREAD; }
			mouse_click_event(title, intX + 10, intY + 5);
			if (random_delay(index, gameclass, dm, 800, 1200) == EXIT_THREAD) { return EXIT_THREAD; }
			return 1;
		}
		if (random_delay(index, gameclass, dm, 250, 500) == EXIT_THREAD) { return EXIT_THREAD; }
		i--;
	}
	return 0;
}
//Ñ¡´òÄÄ¸ö
int BeginJueXing::ChooseMonster(long hd, dmsoft *dm, int monster_kind, int gameclass, int index) {
	if (dm == NULL)
	{
		return 0;
	}
	int i = 15;
	//»ñÈ¡¸¸´°¿Ú±êÌâ
	long parentHandle = dm->GetWindow(hd, 0);
	CString title = dm->GetWindowTitle(parentHandle);
	//¶¨ÒåÒ»Ð©±äÁ¿
	CPoint startXY, endXY;
	CString source_pic;
	switch (monster_kind)
	{
		//»ð  54,275,101,393,
	case 0: {
		startXY.x = 54, startXY.y = 275;
		endXY.x = 101, endXY.y = 393;
		source_pic = _T("»ð÷è÷ë.bmp");
		print_log(_T("Ñ¡Ôñ»ð÷è÷ë...\r\n"), gameclass);
		int resultSelect = WhichToSelect(hd, dm, startXY, endXY, source_pic, gameclass, index);
		if (resultSelect == 1){ break; }
		else if (resultSelect == EXIT_THREAD) { return EXIT_THREAD; }
		else if(resultSelect == 0){ return 0; }
	}//·ç 279,281,329,396,
	case 1: {
		startXY.x = 279, startXY.y = 281;
		endXY.x = 329, endXY.y = 396;
		source_pic = _T("·ç÷è÷ë.bmp");
		print_log(_T("Ñ¡Ôñ·ç÷è÷ë...\r\n"), gameclass);
		int resultSelect = WhichToSelect(hd, dm, startXY, endXY, source_pic, gameclass, index);
		if (resultSelect == 1) { break; }
		else if (resultSelect == EXIT_THREAD) { return EXIT_THREAD; }
		else if (resultSelect == 0) { return 0; }
	}//Ë®  501,279,552,394,
	case 2: {
		startXY.x = 501, startXY.y = 279;
		endXY.x = 552, endXY.y = 394;
		source_pic = _T("Ë®÷è÷ë.bmp");
		print_log(_T("Ñ¡ÔñË®÷è÷ë...\r\n"), gameclass);
		int resultSelect = WhichToSelect(hd, dm, startXY, endXY, source_pic, gameclass, index);
		if (resultSelect == 1) { break; }
		else if (resultSelect == EXIT_THREAD) { return EXIT_THREAD; }
		else if (resultSelect == 0) { return 0; }
	}//À× 728,269,770,390,
	case 3: {
		startXY.x = 728, startXY.y = 269;
		endXY.x = 770, endXY.y = 390;
		source_pic = _T("À×÷è÷ë.bmp");
		print_log(_T("Ñ¡ÔñÀ×÷è÷ë...\r\n"), gameclass);
		int resultSelect = WhichToSelect(hd, dm, startXY, endXY, source_pic, gameclass, index);
		if (resultSelect == 1) { break; }
		else if (resultSelect == EXIT_THREAD) { return EXIT_THREAD; }
		else if (resultSelect == 0) { return 0; }
	}
	default:
		break;
	}
	return 1;
}

//Ñ°¸±±¾
int BeginJueXing::FindJueXing(long hd, dmsoft *dm, int gameclass, int index) {
	if (dm == NULL)
	{
		return 0;
	}
	//¶¨Òå¾Ö²¿±äÁ¿
	long intX, intY;
	//»ñÈ¡¸¸´°¿Ú±êÌâ
	long parentHandle = dm->GetWindow(hd, 0);
	CString title = dm->GetWindowTitle(parentHandle);
	while (1)
	{
		//×Ô¶¯¾Ü¾øÐüÉÍ
		if (AutoRejectXS(hd, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		//µã»÷ÓùÁé
		if (dm->FindPic(25, 453, 109, 537, _T("¾õÐÑ²ÄÁÏ.bmp|¾õÐÑ²ÄÁÏ2.bmp"), _T("202020"), 0.85, 0, &intX, &intY) != -1)
		{
			if (random_delay(index, gameclass, dm, 1000, 1500) == EXIT_THREAD) { return EXIT_THREAD; }
			mouse_click_event(title, intX + 10, intY + 20);
			if (random_delay(index, gameclass, dm, 2000, 3000) == EXIT_THREAD) { return EXIT_THREAD; }
			break;
		}
		if (random_delay(index, gameclass, dm, 500, 700) == EXIT_THREAD) { return EXIT_THREAD; }
	}

	return 1;
}
//Ëø¶¨ÕóÈÝ
int BeginJueXing::lockTeam(long hd, dmsoft *dm, int gameclass, int index) {
	if (dm == NULL)
	{
		return 0;
	}
	//¶¨Òå¾Ö²¿±äÁ¿
	long intX, intY;
	int i = 10;
	//»ñÈ¡¸¸´°¿Ú±êÌâ
	long parentHandle = dm->GetWindow(hd, 0);
	CString title = dm->GetWindowTitle(parentHandle);
	while (i > 0)
	{
		//×Ô¶¯¾Ü¾øÐüÉÍ
		if (AutoRejectXS(hd, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		if (dm->FindPic(411, 415, 452, 454, _T("½âËøÕóÈÝ.bmp"), _T("202020"), 0.9, 0, &intX, &intY) != -1) {
			print_log(_T("Ëø¶¨ÕóÈÝ...\r\n"), gameclass);
			if (random_delay(index, gameclass, dm, 1800, 2200) == EXIT_THREAD) { return EXIT_THREAD; }
			mouse_click_event(title, intX + 13, intY + 13);
			if (random_delay(index, gameclass, dm, 500, 1000) == EXIT_THREAD) { return EXIT_THREAD; }
			readyFlag = FALSE;
			break;
		}
		if (dm->FindPic(411, 415, 452, 454, _T("ÕóÈÝËø¶¨.bmp"), _T("202020"), 0.9, 0, &intX, &intY) != -1) {
			readyFlag = FALSE;
			break;
		}

		if (random_delay(index, gameclass, dm, 500, 800) == EXIT_THREAD) { return EXIT_THREAD; }
		i--;
	}
	return 1;
}
//½øÈë¸±±¾
int BeginJueXing::EnterJueXing(long hd, dmsoft *dm, int gameclass, int index) {
	if (dm == NULL)
	{
		return 0;
	}
	//¶¨Òå¾Ö²¿±äÁ¿
	long intX, intY;
	//»ñÈ¡¸¸´°¿Ú±êÌâ
	long parentHandle = dm->GetWindow(hd, 0);
	CString title = dm->GetWindowTitle(parentHandle);
	while (1)
	{
		//×Ô¶¯¾Ü¾øÐüÉÍ
		if (AutoRejectXS(hd, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		if (dm->FindPic(824, 437, 902, 505, _T("ÌôÕ½ÓùÁé.bmp"), _T("202020"), 0.9, 0, &intX, &intY) != -1) {
			print_log(_T("µã»÷ÌôÕ½...\r\n"), gameclass);
			if (random_delay(index, gameclass, dm, 1000, 1500) == EXIT_THREAD) { return EXIT_THREAD; }
			CPoint pos = random_pos(intX, intY, 10, 20);
			mouse_click_event(title, pos.x, pos.y);
			if (random_delay(index, gameclass, dm, 500, 1000) == EXIT_THREAD) { return EXIT_THREAD; }
		}
		if (readyFlag && (dm->FindPic(838, 405, 935, 474, _T("×¼±¸.bmp|×¼±¸2.bmp"), _T("202020"), 0.9, 0, &intX, &intY) != -1)) {
			print_log(_T("µã»÷×¼±¸...\r\n"), gameclass);
			CPoint pos = random_pos(intX, intY, 1, 3);
			if (random_delay(index, gameclass, dm, 500, 800) == EXIT_THREAD) { return EXIT_THREAD; }
			mouse_click_event(title, pos.x, pos.y);
			if (random_delay(index, gameclass, dm, 1800, 2200) == EXIT_THREAD) { return EXIT_THREAD; }
		}
		if (dm->FindPic(233, 60, 536, 253, _T("Ê¤Àû.bmp"), _T("202020"), 0.9, 0, &intX, &intY) != -1) {
			print_log(_T("Õ½¶·½áËãÖÐ...\r\n"), gameclass);
			CPoint pos = random_pos(798, 429, 5, 10);
			if (random_delay(index, gameclass, dm, 800, 1200) == EXIT_THREAD) { return EXIT_THREAD; }
			mouse_click_event(title, pos.x, pos.y);
			if (random_delay(index, gameclass, dm, 1500, 2000) == EXIT_THREAD) { return EXIT_THREAD; }
		}
		if (dm->FindPic(335, 256, 616, 497, _T("»ê.bmp|»ê(µ×²¿).bmp"), _T("202020"), 0.9, 0, &intX, &intY) != -1) {
			if (random_delay(index, gameclass, dm, 1800, 2200) == EXIT_THREAD) { return EXIT_THREAD; }
			CPoint pos = random_pos(798, 436, 5, 10);
			mouse_click_event(title, pos.x, pos.y);
			if (random_delay(index, gameclass, dm, 1800, 2200) == EXIT_THREAD) { return EXIT_THREAD; }
			break;
		}

		if (random_delay(index, gameclass, dm, 500, 800) == EXIT_THREAD) { return EXIT_THREAD; }
	}
	return 1;
}

//Í¥ÔºÑûÇëºÃÓÑÄ£Ê½
int BeginJueXing::inviteJueXing(long hd, int round, int mode, int layer, CString jc, dmsoft *dm, int gameclass, int index) {
	if (dm == NULL)
	{
		return 0;
	}
	//³õÊ¼»¯×¼±¸±êÖ¾
	readyFlag = TRUE;
	//ÅÐ¶ÏÊÇ·ñÔÚÍ¥Ôº
	if (!IsInYard(dm, gameclass, index))
	{
		print_log(_T("ÇëÈ·±£ÔÚÍ¥Ôº½çÃæ!!!\r\n"), gameclass);
		return 0;
	}
	if (random_delay(index, gameclass, dm, 100, 200) == EXIT_THREAD) { return EXIT_THREAD; }
	//ÅÐ¶ÏÍ¥ÔºÊÇ·ñÕ¹¿ª,ÈôÎ´Õ¹¿ªÊ¹Ö®Õ¹¿ª
	if (showYard(dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
	if (random_delay(index, gameclass, dm, 1500, 2500) == EXIT_THREAD) { return EXIT_THREAD; }
	//µã»÷×é¶Ó
	int resultCombine = CombineTeamAction(hd, dm, gameclass, index);
	if (resultCombine == 0) {
		print_log(_T("ºÜ±§Ç¸£¬Î´ÕÒµ½×é¶Ó°´Å¥...\r\n"), gameclass);
		return 0;
	}
	else if (resultCombine == EXIT_THREAD) { return EXIT_THREAD; }
	if (random_delay(index, gameclass, dm, 1500, 2500) == EXIT_THREAD) { return EXIT_THREAD; }
	//Ñ¡ÔñÓù»ê

	//»ñÈ¡Ä¿±êÎ»ÖÃ
	CString bmp_pic = _T("Ì½Ë÷(À§ÄÑ).bmp|¾õÐÑÒµ»ðÂÖ.bmp|¾õÐÑ·ç×ª·û.bmp|¾õÐÑË®ÁéÀð.bmp|¾õÐÑÌìÀ×¹Ä.bmp|Óù»ê.bmp|ÈÕÂÖÖ®ÔÉ.bmp|ÓÀÉúÖ®º£.bmp|ÑýÆø·âÓ¡.bmp|¾­ÑéÑý¹Ö.bmp|½ð±ÒÑý¹Ö.bmp|ÄêÊÞ.bmp|½á½çÍ»ÆÆ.bmp");
	CPoint startXY, endXY;
	startXY.x = 101, startXY.y = 75;
	endXY.x = 276, endXY.y = 503;

	//ÕÒµ½¾õÐÑ²¢µã»÷
	CString mode_str;
	if (mode==0)
	{
		mode_str = _T("¾õÐÑÒµ»ðÂÖ.bmp|¾õÐÑÒµ»ðÂÖ(Ñ¡ÖÐ).bmp");
	}else if (mode == 1) {
		mode_str = _T("¾õÐÑ·ç×ª·û.bmp|¾õÐÑ·ç×ª·û(Ñ¡ÖÐ).bmp");
	}
	else if (mode == 2) {
		mode_str = _T("¾õÐÑË®ÁéÀð.bmp|¾õÐÑË®ÁéÀð(Ñ¡ÖÐ).bmp");
	}
	else if (mode == 3) {
		mode_str = _T("¾õÐÑÌìÀ×¹Ä.bmp|¾õÐÑÌìÀ×¹Ä(Ñ¡ÖÐ).bmp");
	}
	findDestination(hd, bmp_pic, mode+1, mode_str, startXY, endXY, dm, gameclass, index);
	if (random_delay(index, gameclass, dm, 500, 1500) == EXIT_THREAD) { return EXIT_THREAD; }
	//Ñ¡²ã
	//Ñ¡Ôñ²ã²¢µã»÷
	startXY.x = 293, startXY.y = 129;
	endXY.x = 442, endXY.y = 432;
	int resultLayer = ChooseLayer(hd, layer, startXY, endXY, dm, gameclass, index);
	if (resultLayer == 0) {
		print_log(_T("Î´ÕÒµ½Ä¿±ê²ãÊý!!!\r\n"), gameclass);
		return 0;
	}
	else if (resultLayer == EXIT_THREAD) { return EXIT_THREAD; }
	if (random_delay(index, gameclass, dm, 500, 1500) == EXIT_THREAD) { return EXIT_THREAD; }
	//´´½¨¶ÓÎé--µã»÷ÑûÇë
	int resultCreat = CreatTeamToInvite(hd, dm, gameclass, index);
	if (resultCreat == 0) {
		print_log(_T("´´½¨¶ÓÎéÊ§°Ü!!!\r\n"), gameclass);
		//Î´ÕÒµ½×î½üºÃÓÑ£¬·µ»ØÍ¥Ôººó¹Ø±Õ¼Ó³É
		startXY.x = 290, startXY.y = 10;
		endXY.x = 346, endXY.y = 80;
		if (random_delay(index, gameclass, dm, 1200, 2400) == EXIT_THREAD) { return EXIT_THREAD; }
		if (auto_close_jc(hd, _T("¾õÐÑ"), jc, startXY, endXY, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		return 0;
	}else if(resultCreat == EXIT_THREAD){ return EXIT_THREAD; }
	if (random_delay(index, gameclass, dm, 500, 1500) == EXIT_THREAD) { return EXIT_THREAD; }
	//¿ªÊ¼Ñ­»·
	int count = 0;
	while (count < round)
	{
		//×Ô¶¯¾Ü¾øÐüÉÍ
		if (AutoRejectXS(hd, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		//¼ì²âºÃÓÑ¼ÓÈë¶ÓÎé²¢µãÌôÕ½
		if (IsEnterTeam(hd, dm, count, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		//×Ô¶¯¿ª¼Ó³É
		if (count == 0)
		{
			startXY.x = 82, startXY.y = 479;
			endXY.x = 121, endXY.y = 539;
			if (auto_open_jc(hd, _T("¾õÐÑ"), jc, startXY, endXY, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		}
		if (random_delay(index, gameclass, dm, 1000, 1500) == EXIT_THREAD) { return EXIT_THREAD; }
		//½øÈë¾õÐÑ¸±±¾
		CString count_str;
		count_str.Format(_T("%d"), count + 1);
		print_log(_T("µÚ" + count_str + "ÂÖ¾õÐÑ¿ªÊ¼...\r\n"), gameclass);
		if (InviteEnterEvent(hd, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		if (random_delay(index, gameclass, dm, 500, 1500) == EXIT_THREAD) { return EXIT_THREAD; }

		if (count == 0)
		{
			if (DefalutInvite(hd, dm, gameclass, index) == EXIT_THREAD){ return EXIT_THREAD; }
		}
		count++;

	}
	//Ë¢ÍêÍË³ö
	if (count >= round)
	{
		print_log(_T("ÈÎÎñÒÑÍê³É£¬ÕýÔÚÍË³ö·µ»ØÍ¥Ôº...\r\n"), gameclass);
		if (returnYard(hd, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		if (random_delay(index, gameclass, dm, 600, 1200) == EXIT_THREAD) { return EXIT_THREAD; }

		//×Ô¶¯¹Ø¼Ó³É
		startXY.x = 290, startXY.y = 10;
		endXY.x = 346, endXY.y = 80;
		if (auto_close_jc(hd, _T("¾õÐÑ"), jc, startXY, endXY, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		if (random_delay(index, gameclass, dm, 1000, 2000) == EXIT_THREAD) { return EXIT_THREAD; }
	}

	return 1;
}
//Í¥Ôº½ÓÊÜÑûÇëÄ£Ê½
int BeginJueXing::BeinvitedJueXing(long hd, int round, CString jc, dmsoft *dm, int gameclass, int index) {
	if (dm == NULL)
	{
		return 0;
	}
	//³õÊ¼»¯×¼±¸±êÖ¾
	readyFlag = TRUE;
	//ÅÐ¶ÏÊÇ·ñÔÚÍ¥Ôº
	if (!IsInYard(dm, gameclass, index))
	{
		print_log(_T("ÇëÈ·±£ÔÚÍ¥Ôº½çÃæ!!!\r\n"), gameclass);
		return 0;
	}
	//×Ô¶¯¿ª¼Ó³É
	CPoint startXY, endXY;
	startXY.x = 294, startXY.y = 19;
	endXY.x = 336, endXY.y = 72;
	if (auto_open_jc(hd, _T("¾õÐÑ"), jc, startXY, endXY, dm, gameclass, index) == EXIT_THREAD){ return EXIT_THREAD; }
	//¿ªÊ¼Ñ­»·
	int count = 0;
	while (count < round)
	{
		//×Ô¶¯¾Ü¾øÐüÉÍ
		if (AutoRejectXS(hd, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		if (random_delay(index, gameclass, dm, 1000, 1500) == EXIT_THREAD) { return EXIT_THREAD; }
		//½øÈë°Ëáª´óÉß¸±±¾
		print_log(_T("µÈ´ýºÃÓÑÑûÇë...\r\n"), gameclass);
		if (ReceiveEnterEvent(hd, dm, count, _T("¾õÐÑ"), gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		if (random_delay(index, gameclass, dm, 500, 1500) == EXIT_THREAD) { return EXIT_THREAD; }
		count++;

	}
	//Ë¢ÍêÍË³ö
	if (count >= round)
	{
		print_log(_T("ÈÎÎñÒÑÍê³É£¬ÕýÔÚÍË³ö·µ»ØÍ¥Ôº...\r\n"), gameclass);
		if (returnYard(hd, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		if (random_delay(index, gameclass, dm, 600, 1200) == EXIT_THREAD) { return EXIT_THREAD; }

		//×Ô¶¯¹Ø¼Ó³É
		startXY.x = 290, startXY.y = 10;
		endXY.x = 346, endXY.y = 80;
		if (auto_close_jc(hd, _T("¾õÐÑ"), jc, startXY, endXY, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		if (random_delay(index, gameclass, dm, 1000, 2000) == EXIT_THREAD) { return EXIT_THREAD; }
	}

	return 1;
}
//¿ªÊ¼µ¥Ë¢
int BeginJueXing::SingleJueXing(long hd, int round, int monster_kind, int layer, CString jc, dmsoft *dm, int gameclass, int index) {
	if (dm == NULL)
	{
		return 0;
	}
	//³õÊ¼»¯×¼±¸±êÖ¾
	readyFlag = TRUE;
	//ÅÐ¶ÏÊÇ·ñÔÚÍ¥Ôº
	if (!IsInYard(dm, gameclass, index))
	{
		print_log(_T("ÇëÈ·±£ÔÚÍ¥Ôº½çÃæ!!!\r\n"), gameclass);
		return 0;
	}
	if (random_delay(index, gameclass, dm, 100, 200) == EXIT_THREAD) { return EXIT_THREAD; }
	//×Ô¶¯¿ª¼Ó³É
	CPoint startXY, endXY;
	startXY.x = 294, startXY.y = 19;
	endXY.x = 336, endXY.y = 72;
	if (auto_open_jc(hd, _T("¾õÐÑ"), jc, startXY, endXY, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
	//Ñ°ÕÒÌ½Ë÷µÆÁý²¢µã»÷
	int result = FindExploreLanTernAndClick(hd, dm, gameclass, index);
	if (result == 0) {
		print_log(_T("ÔÚÍ¥Ôº½çÃæ£¬µ«Î´ÕÒµ½Ì½Ë÷µÆÁý!!!\r\n"), gameclass);
		return 0;
	}
	else if (result == EXIT_THREAD) { return EXIT_THREAD; }
	if (random_delay(index, gameclass, dm, 2500, 3500) == EXIT_THREAD) { return EXIT_THREAD; }
	//Ñ°¾õÐÑ
	if(FindJueXing(hd, dm, gameclass, index) == EXIT_THREAD){ return EXIT_THREAD; }
	if (random_delay(index, gameclass, dm, 800, 1200) == EXIT_THREAD) { return EXIT_THREAD; }
	//Ñ¡´òÄÄ¸ö
	int resultChooseMonster = ChooseMonster(hd, dm, monster_kind, gameclass, index);
	if (resultChooseMonster == 0) {
		print_log(_T("Î´ÕÒµ½÷è÷ë£¡\r\n"), gameclass);
		return 0;
	}else if(resultChooseMonster == EXIT_THREAD) { return EXIT_THREAD; }
	//Ñ¡²ãµã»÷ 
	startXY.x = 109, startXY.y = 103;
	endXY.x = 362, endXY.y = 451;
	int resultSingleChoose = SingleChooseLayer(hd, layer, startXY, endXY, dm, gameclass, index);
	if (resultSingleChoose == 0) {
		print_log(_T("Î´ÕÒµ½Ä¿±ê!!!\r\n"), gameclass);
		return 0;
	}
	else if (resultSingleChoose == EXIT_THREAD) { return EXIT_THREAD; }
	if (random_delay(index, gameclass, dm, 500, 1500) == EXIT_THREAD) { return EXIT_THREAD; }
	//Ëø¶¨ÕóÈÝ
	if(lockTeam(hd, dm, gameclass, index) == EXIT_THREAD){ return EXIT_THREAD; }
	if (random_delay(index, gameclass, dm, 500, 1500) == EXIT_THREAD) { return EXIT_THREAD; }
	//¿ªÊ¼Ñ­»·
	int count = 0;
	while (count < round)
	{
		//×Ô¶¯¾Ü¾øÐüÉÍ
		if (AutoRejectXS(hd, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }

		//½øÈë¾õÐÑ¸±±¾
		CString count_str;
		count_str.Format(_T("%d"), count + 1);
		print_log(_T("µÚ" + count_str + "ÂÖ¾õÐÑ¿ªÊ¼...\r\n"), gameclass);
		if (EnterJueXing(hd, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		if (random_delay(index, gameclass, dm, 500, 1500) == EXIT_THREAD) { return EXIT_THREAD; }
		count++;

	}
	//Ë¢ÍêÍË³ö
	if (count >= round)
	{
		print_log(_T("ÈÎÎñÒÑÍê³É£¬ÕýÔÚÍË³ö·µ»ØÍ¥Ôº...\r\n"), gameclass);
		if (returnYard(hd, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		if (random_delay(index, gameclass, dm, 1000, 1800) == EXIT_THREAD) { return EXIT_THREAD; }
		//×Ô¶¯¹Ø¼Ó³É
		startXY.x = 290, startXY.y = 10;
		endXY.x = 346, endXY.y = 80;
		if (auto_close_jc(hd, _T("¾õÐÑ"), jc, startXY, endXY, dm, gameclass, index) == EXIT_THREAD) { return EXIT_THREAD; }
		if (random_delay(index, gameclass, dm, 1000, 2000) == EXIT_THREAD) { return EXIT_THREAD; }
	}

	return 1;
}
/**
 *                      ½­³Ç×Ó . ³ÌÐòÔ±Ö®¸è
 *
 *                  Ê®ÄêÉúËÀÁ½Ã£Ã££¬Ð´³ÌÐò£¬µ½ÌìÁÁ¡£
 *                      Ç§ÐÐ´úÂë£¬BugºÎ´¦²Ø¡£
 *                  ×ÝÊ¹ÉÏÏßÓÖÔõÑù£¬³¯Áî¸Ä£¬Ï¦¶Ï³¦¡£
 *
 *                  Áìµ¼Ã¿ÌìÐÂÏë·¨£¬ÌìÌì¸Ä£¬ÈÕÈÕÃ¦¡£
 *                      Ïà¹ËÎÞÑÔ£¬Î©ÓÐÀáÇ§ÐÐ¡£
 *                  Ã¿ÍíµÆ»ðÀ»Éº´¦£¬Ò¹ÄÑÃÂ£¬¼Ó°à¿ñ¡£
 */